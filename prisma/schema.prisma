datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          Int              @id @default(autoincrement())
  email       String           @unique
  password    String
  books       Book[]
  collections Collection[]
  progress    ReadingProgress[]
  bookmarks   Bookmark[]
  notes       Note[]
}

model Book {
  id          Int               @id @default(autoincrement())
  title       String
  author      String?
  format      String
  publisher   String?
  language    String?
  filePath    String            @unique
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  collections Collection[]
  bookmarks   Bookmark[]
  notes       Note[]
  user        User?             @relation(fields: [userId], references: [id])
  userId      Int?
  progress    ReadingProgress[]
}

model ReadingProgress {
  id        Int      @id @default(autoincrement())
  book      Book     @relation(fields: [bookId], references: [id])
  bookId    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  progress  Float
  position  String
  updatedAt DateTime @default(now())

  @@unique([bookId, userId])
}

model Bookmark {
  id        Int      @id @default(autoincrement())
  book      Book     @relation(fields: [bookId], references: [id])
  bookId    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  position  String
  note      String?
  createdAt DateTime @default(now())
}

model Note {
  id        Int      @id @default(autoincrement())
  book      Book     @relation(fields: [bookId], references: [id])
  bookId    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  content   String
  position  String
  createdAt DateTime @default(now())
}

model Collection {
  id        Int      @id @default(autoincrement())
  name      String
  books     Book[]
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  createdAt DateTime @default(now())
}